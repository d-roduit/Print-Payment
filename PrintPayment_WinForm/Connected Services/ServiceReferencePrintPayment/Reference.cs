//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrintPayment_WinForm.ServiceReferencePrintPayment {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NbSheetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Credit {
            get {
                return this.CreditField;
            }
            set {
                if ((this.CreditField.Equals(value) != true)) {
                    this.CreditField = value;
                    this.RaisePropertyChanged("Credit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NbSheets {
            get {
                return this.NbSheetsField;
            }
            set {
                if ((this.NbSheetsField.Equals(value) != true)) {
                    this.NbSheetsField = value;
                    this.RaisePropertyChanged("NbSheets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UID {
            get {
                return this.UIDField;
            }
            set {
                if ((this.UIDField.Equals(value) != true)) {
                    this.UIDField = value;
                    this.RaisePropertyChanged("UID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConversionTable", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class ConversionTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePrintPayment.IPrintPayment")]
    public interface IPrintPayment {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/GetUserByUID", ReplyAction="http://tempuri.org/IPrintPayment/GetUserByUIDResponse")]
        PrintPayment_WinForm.ServiceReferencePrintPayment.User GetUserByUID(int UID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/GetUserByUID", ReplyAction="http://tempuri.org/IPrintPayment/GetUserByUIDResponse")]
        System.Threading.Tasks.Task<PrintPayment_WinForm.ServiceReferencePrintPayment.User> GetUserByUIDAsync(int UID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/GetUserByUsername", ReplyAction="http://tempuri.org/IPrintPayment/GetUserByUsernameResponse")]
        PrintPayment_WinForm.ServiceReferencePrintPayment.User GetUserByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/GetUserByUsername", ReplyAction="http://tempuri.org/IPrintPayment/GetUserByUsernameResponse")]
        System.Threading.Tasks.Task<PrintPayment_WinForm.ServiceReferencePrintPayment.User> GetUserByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/TransferMoneyByUID", ReplyAction="http://tempuri.org/IPrintPayment/TransferMoneyByUIDResponse")]
        void TransferMoneyByUID(int UID, decimal credit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/TransferMoneyByUID", ReplyAction="http://tempuri.org/IPrintPayment/TransferMoneyByUIDResponse")]
        System.Threading.Tasks.Task TransferMoneyByUIDAsync(int UID, decimal credit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/TransferMoneyByUsername", ReplyAction="http://tempuri.org/IPrintPayment/TransferMoneyByUsernameResponse")]
        void TransferMoneyByUsername(string username, decimal credit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/TransferMoneyByUsername", ReplyAction="http://tempuri.org/IPrintPayment/TransferMoneyByUsernameResponse")]
        System.Threading.Tasks.Task TransferMoneyByUsernameAsync(string username, decimal credit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/UpdatePrice", ReplyAction="http://tempuri.org/IPrintPayment/UpdatePriceResponse")]
        void UpdatePrice(decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/UpdatePrice", ReplyAction="http://tempuri.org/IPrintPayment/UpdatePriceResponse")]
        System.Threading.Tasks.Task UpdatePriceAsync(decimal price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/GetConversionTable", ReplyAction="http://tempuri.org/IPrintPayment/GetConversionTableResponse")]
        PrintPayment_WinForm.ServiceReferencePrintPayment.ConversionTable GetConversionTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrintPayment/GetConversionTable", ReplyAction="http://tempuri.org/IPrintPayment/GetConversionTableResponse")]
        System.Threading.Tasks.Task<PrintPayment_WinForm.ServiceReferencePrintPayment.ConversionTable> GetConversionTableAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPrintPaymentChannel : PrintPayment_WinForm.ServiceReferencePrintPayment.IPrintPayment, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintPaymentClient : System.ServiceModel.ClientBase<PrintPayment_WinForm.ServiceReferencePrintPayment.IPrintPayment>, PrintPayment_WinForm.ServiceReferencePrintPayment.IPrintPayment {
        
        public PrintPaymentClient() {
        }
        
        public PrintPaymentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrintPaymentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintPaymentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintPaymentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PrintPayment_WinForm.ServiceReferencePrintPayment.User GetUserByUID(int UID) {
            return base.Channel.GetUserByUID(UID);
        }
        
        public System.Threading.Tasks.Task<PrintPayment_WinForm.ServiceReferencePrintPayment.User> GetUserByUIDAsync(int UID) {
            return base.Channel.GetUserByUIDAsync(UID);
        }
        
        public PrintPayment_WinForm.ServiceReferencePrintPayment.User GetUserByUsername(string username) {
            return base.Channel.GetUserByUsername(username);
        }
        
        public System.Threading.Tasks.Task<PrintPayment_WinForm.ServiceReferencePrintPayment.User> GetUserByUsernameAsync(string username) {
            return base.Channel.GetUserByUsernameAsync(username);
        }
        
        public void TransferMoneyByUID(int UID, decimal credit) {
            base.Channel.TransferMoneyByUID(UID, credit);
        }
        
        public System.Threading.Tasks.Task TransferMoneyByUIDAsync(int UID, decimal credit) {
            return base.Channel.TransferMoneyByUIDAsync(UID, credit);
        }
        
        public void TransferMoneyByUsername(string username, decimal credit) {
            base.Channel.TransferMoneyByUsername(username, credit);
        }
        
        public System.Threading.Tasks.Task TransferMoneyByUsernameAsync(string username, decimal credit) {
            return base.Channel.TransferMoneyByUsernameAsync(username, credit);
        }
        
        public void UpdatePrice(decimal price) {
            base.Channel.UpdatePrice(price);
        }
        
        public System.Threading.Tasks.Task UpdatePriceAsync(decimal price) {
            return base.Channel.UpdatePriceAsync(price);
        }
        
        public PrintPayment_WinForm.ServiceReferencePrintPayment.ConversionTable GetConversionTable() {
            return base.Channel.GetConversionTable();
        }
        
        public System.Threading.Tasks.Task<PrintPayment_WinForm.ServiceReferencePrintPayment.ConversionTable> GetConversionTableAsync() {
            return base.Channel.GetConversionTableAsync();
        }
    }
}
